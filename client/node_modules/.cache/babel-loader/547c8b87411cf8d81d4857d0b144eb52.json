{"ast":null,"code":"var _jsxFileName = \"/Users/andyedstrom/Documents/ucf-bootcamp/Homework/clicky-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport characters from './characters.json';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      characters,\n      score: 0,\n      highscore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({\n          highscore: this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      this.state.characters.forEach(character => {\n        character.count = 0;\n      });\n      alert(`Game Over score /nscore: ${this.state.score}`);\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.clickCount = id => {\n      this.state.characters.find((o, i) => {\n        if (o.id === id) {\n          if (characters[i].count === 0) {\n            characters[i].count = characters[i].count + 1;\n            this.setState({\n              score: this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n            this.state.characters.sort(() => Math.random() - 0.5);\n            return true;\n          } else {\n            this.gameOver();\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      score: this.state.score,\n      highscore: this.state.highscore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Clicky Game\"), this.state.characters.map(character => /*#__PURE__*/React.createElement(Card, {\n      clickCount: this.clickCount,\n      id: character.id,\n      key: character.id,\n      image: character.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andyedstrom/Documents/ucf-bootcamp/Homework/clicky-game/src/App.js"],"names":["React","Component","Card","Wrapper","Header","characters","App","state","score","highscore","gameOver","setState","console","log","forEach","character","count","alert","clickCount","id","find","o","i","sort","Math","random","render","map","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA,UADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAFkB;;AAAA,SAQ1BC,QAR0B,GAQf,MAAM;AACf,UAAI,KAAKH,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,SAAlC,EAA6C;AAC3C,aAAKE,QAAL,CAAc;AAACF,UAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC;AAAvB,SAAd,EAA6C,YAAW;AACtDI,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,SAAvB;AACD,SAFD;AAGD;;AACD,WAAKF,KAAL,CAAWF,UAAX,CAAsBS,OAAtB,CAA8BC,SAAS,IAAI;AACzCA,QAAAA,SAAS,CAACC,KAAV,GAAkB,CAAlB;AACD,OAFD;AAGAC,MAAAA,KAAK,CAAE,4BAA2B,KAAKV,KAAL,CAAWC,KAAM,EAA9C,CAAL;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAC;AAAP,OAAd;AACA,aAAO,IAAP;AACD,KApByB;;AAAA,SAsB1BU,UAtB0B,GAsBbC,EAAE,IAAI;AACjB,WAAKZ,KAAL,CAAWF,UAAX,CAAsBe,IAAtB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnC,YAAID,CAAC,CAACF,EAAF,KAASA,EAAb,EAAiB;AACf,cAAGd,UAAU,CAACiB,CAAD,CAAV,CAAcN,KAAd,KAAwB,CAA3B,EAA6B;AAC3BX,YAAAA,UAAU,CAACiB,CAAD,CAAV,CAAcN,KAAd,GAAsBX,UAAU,CAACiB,CAAD,CAAV,CAAcN,KAAd,GAAsB,CAA5C;AACA,iBAAKL,QAAL,CAAc;AAACH,cAAAA,KAAK,EAAG,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,aAAd,EAA8C,YAAW;AACvDI,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACD,aAFD;AAGA,iBAAKD,KAAL,CAAWF,UAAX,CAAsBkB,IAAtB,CAA2B,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAjD;AACA,mBAAO,IAAP;AACD,WAPD,MAQI;AACF,iBAAKf,QAAL;AACD;AACF;AACF,OAdD;AAeD,KAtCyB;AAAA;;AAwC1BgB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAI,KAAKnB,KAAL,CAAWC,KAA5B;AAAmC,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEG,KAAKF,KAAL,CAAWF,UAAX,CAAsBsB,GAAtB,CAA0BZ,SAAS,iBAClC,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKG,UADnB;AAEE,MAAA,EAAE,EAAEH,SAAS,CAACI,EAFhB;AAGE,MAAA,GAAG,EAAEJ,SAAS,CAACI,EAHjB;AAIE,MAAA,KAAK,EAAEJ,SAAS,CAACa,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAaD;;AAtDyB;;AAyD5B,eAAetB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport characters from './characters.json';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    characters,\n    score: 0,\n    highscore: 0,\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      })\n    }\n    this.state.characters.forEach(character => {\n      character.count = 0;\n    });\n    alert(`Game Over score /nscore: ${this.state.score}`);\n    this.setState({score:0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.characters.find((o, i) => {\n      if (o.id === id) {\n        if(characters[i].count === 0){\n          characters[i].count = characters[i].count + 1;\n          this.setState({score : this.state.score + 1}, function() {\n            console.log(this.state.score)\n          });\n          this.state.characters.sort(() => Math.random() - 0.5)\n          return true;\n        }\n        else{\n          this.gameOver();\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header score = {this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n        {this.state.characters.map(character => (\n          <Card\n            clickCount={this.clickCount}\n            id={character.id}\n            key={character.id}\n            image={character.image}\n            />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}